<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!--配置springMVC -->
	<!--1：开启springMVC注解模式 -->
	<!--简化配置 （1）自动注册DefaultAnnotationHandlerMapping,AnnotationMethodHandlerAdapter 
		（2）提供一系列：数据绑定，数字和日期的format @NumberFormat，@DateTimeFormat, xml，json默认读写支持。 -->
	<!-- <mvc:annotation-driven /> -->
	<!-- <context:annotation-config></context:annotation-config> -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<property name="messageConverters"> <list> <ref bean="mappingJackson2HttpMessageConverter" 
		/> </list> </property> </bean> <bean id="mappingJackson2HttpMessageConverter" 
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> 
		<property name="supportedMediaTypes"> <list> <value>text/html;charset=UTF-8</value> 
		<value>text/json;charset=UTF-8</value> <value>application/json;charset=UTF-8</value> 
		</list> </property> </bean> -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/test/user" />
			<bean
				class="org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor">
				<constructor-arg>
					<bean
						class="org.springframework.web.servlet.resource.ResourceUrlProvider" />
				</constructor-arg>
			</bean>		
		</mvc:interceptor>

		<bean class="io.eoshos.pc.interceptor.LoginInterceptor"/>
			<!-- <property name="allowUri">  
		    	<list>  
					<value>/admin/test/user</value>
				</list>
			</property>	
		</bean> -->
	</mvc:interceptors>
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
							<value>text/json;charset=UTF-8</value>
							<value>application/json;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<!-- <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> 
		<property name="supportedMediaTypes"> <list> <value>text/html;charset=UTF-8</value> 
		</list> </property> </bean> 启动SpringMVC的注解功能，完成请求和注解POJO的映射 <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<property name="messageConverters"> <list> <ref bean="mappingJacksonHttpMessageConverter" 
		/> JSON转换器 </list> </property> </bean> -->

	<!-- <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" 
		/> <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean"> 
		Turn off working out content type based on URL file extension, should fall 
		back to looking at the Accept headers <property name="favorPathExtension" 
		value="false" /> </bean> -->

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<!--bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="1048576000" />
		<property name="maxInMemorySize" value="40960" />
	</bean-->

	<!-- servlet适配器，这里必须明确声明，因为spring默认没有初始化该适配器 -->
	<bean id="servletHandlerAdapter"
		class="org.springframework.web.servlet.handler.SimpleServletHandlerAdapter" />
	<!--servlet-mapping 映射路径："/" -->
	<!--2：静态资源默认servlet配置 1.加入对静态资源的处理：js,gif,png 2.允许使用"/"做整体映射 -->
	<mvc:default-servlet-handler />
	<!--4：扫描web相关的bean -->
	<context:annotation-config />
	<context:component-scan base-package="io.eoshos.*.controller" />
	
	
    <!-- 存储区域设置信息:SessionLocaleResolver类通过一个预定义会话名将区域化信息存储在会话中。  -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />
    
    <!-- 国际化资源文件 -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages" />
        <!-- 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称  -->               
        <property name="useCodeAsDefaultMessage" value="true" />  
    </bean>
    
    <mvc:interceptors>
        <!-- 该拦截器通过名为”lang”的参数来拦截HTTP请求，使其重新设置页面的区域化信息 -->
        <!-- <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />  -->
        <bean class="io.eoshos.pc.interceptor.LanguageInterceptor">
            <property name="paramName" value="lang" />
        </bean>
    </mvc:interceptors>	
	
	<import resource="spring-freemarker.xml" />
</beans>